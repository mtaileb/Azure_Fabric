{
	"name": "Fuzzy_simple_Flowlet",
	"properties": {
		"type": "Flowlet",
		"typeProperties": {
			"sources": [],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "input1"
				},
				{
					"name": "input2"
				},
				{
					"name": "output1"
				}
			],
			"scriptLines": [
				"input(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     order: 0,",
				"     allowSchemaDrift: true) ~> input1",
				"input(output(",
				"          film as string,",
				"          titre as string,",
				"          genre as string,",
				"          year as string,",
				"          Eval as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     order: 1,",
				"     allowSchemaDrift: true) ~> input2",
				"input1 select(mapColumn(",
				"          movieID = movie,",
				"          titre1 = title,",
				"          genres,",
				"          year1 = year,",
				"          Rating",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"input2 select(mapColumn(",
				"          titre2 = titre,",
				"          year2 = year,",
				"          RottenTomato = {Rotton Tomato}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"derivedColumn2, derivedColumn1 join(derivedColumn1@soundexTitle == derivedColumn2@soundexTitle",
				"     && year1 == year2,",
				"     joinType:'outer',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select1 derive(soundexTitle = soundex(titre1)) ~> derivedColumn1",
				"select2 derive(soundexTitle = soundex(titre2)) ~> derivedColumn2",
				"join1 filter((!isNull(titre1) && !isNull(titre2)) && (toInteger(year1) > 0)) ~> filter1",
				"filter1 output() ~> output1"
			]
		}
	}
}